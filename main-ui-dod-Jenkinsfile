@Library('Shared') _
pipeline {
    agent any

    environment {
        PROJECT_NAME     = "DOD UI Preprod"
        IMAGE_NAME       = "dod-ui-app"
        CONTAINER_NAME   = "dod-ui-container"
        REPO_URL         = "https://github.com/data-on-disk/dod-main-ui.git"
        APP_PORT         = "80"
        VM1_IP           = "34.30.159.128"
        SSH_USER         = "ashis"
        CREDENTIALS_ID   = "vm-key"
        EMAIL_SENDER     = "ashishrajdevops@gmail.com"
        EMAIL_RECIPIENTS = "ashishrajtkd123@gmail.com,naunish@dataondisk.com"
        
    }

    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: 'ashish-key-git', url: "${REPO_URL}", branch: 'preprod'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME .'
            }
        }

        stage('Save Docker Image as TAR') {
            steps {
                sh 'docker save -o dod-ui-app.tar $IMAGE_NAME'
            }
        }

        stage('Deploy App to Application VM') {
            steps {
                script {
                    sshagent(credentials: ["${CREDENTIALS_ID}"]) {
                        sh """
                        echo "Deploying app to VM: ${VM1_IP}"
                        scp -o StrictHostKeyChecking=no dod-ui-app.tar ${SSH_USER}@${VM1_IP}:/tmp/
                        ssh -o StrictHostKeyChecking=no ${SSH_USER}@${VM1_IP} "
                            docker stop ${CONTAINER_NAME} || true &&
                            docker rm ${CONTAINER_NAME} || true &&
                            docker load -i /tmp/dod-ui-app.tar &&
                            docker run -d -p ${APP_PORT}:80 --restart=always --name ${CONTAINER_NAME} ${IMAGE_NAME}
                        "
                        """
                    }
                }
            }
        }
    }

post {
        always {
            sendBuildNotification(
                projectName: env.PROJECT_NAME,
                emailSender: env.EMAIL_SENDER,
                emailRecipients: env.EMAIL_RECIPIENTS
            )
        }
    }


    
}
